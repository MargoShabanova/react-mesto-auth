{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse).catch(console.log);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse).catch(console.log);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse).catch(console.log);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse).catch(console.log);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse).catch(console.log);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse).catch(console.log);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse).catch(console.log);\n  }\n\n  changeLikeCardStatus(id, state) {\n    return state ? this.addLike(id) : this.deleteLike(id);\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse).catch(console.log);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-44\",\n  headers: {\n    authorization: \"0d3ef27f-f4a5-410a-8f5b-217508f8811f\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_headers","_baseUrl","_checkResponse","res","ok","json","Promise","reject","status","getProfile","fetch","then","catch","console","log","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addCard","link","deleteCard","id","deleteLike","addLike","changeLikeCardStatus","state","editAvatar","avatar","api","authorization"],"sources":["/Users/margaritasabanova/Documents/dev1/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .catch(console.log);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .catch(console.log);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    })\n      .then(this._checkResponse)\n      .catch(console.log);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    })\n      .then(this._checkResponse)\n      .catch(console.log);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .catch(console.log);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .catch(console.log);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .catch(console.log);\n  }\n\n  changeLikeCardStatus(id, state) {\n    return state ? this.addLike(id) : this.deleteLike(id);\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    })\n      .then(this._checkResponse)\n      .catch(console.log);\n  }\n}\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-44\",\n  headers: {\n    authorization: \"0d3ef27f-f4a5-410a-8f5b-217508f8811f\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}